version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sahur
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # SAHUR Server (API server)
  sahur-server:
    build:
      context: ./sahur-server
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/sahur
      PORT: 8000
      MCP_SERVER_URL: http://sahur-mcp:8002
    ports:
      - "8000:8000"
    volumes:
      - ./sahur-server:/app
      - ./sahur-core:/app/sahur-core

  # SAHUR MCP (MCP proxy server)
  sahur-mcp:
    build:
      context: ./sahur-mcp
      dockerfile: Dockerfile
    environment:
      PORT: 8002
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:-}
      SENTRY_TOKEN: ${SENTRY_TOKEN:-}
    ports:
      - "8002:8002"
    volumes:
      - ./sahur-mcp:/app
      - ./sahur-core:/app/sahur-core

  # SAHUR Batch (Dynamic issue processing instance)
  # This is not a long-running service, but is built and ready to be launched by sahur-server
  sahur-batch-builder:
    build:
      context: ./sahur-batch
      dockerfile: Dockerfile
    image: sahur-batch:latest
    volumes:
      - ./sahur-batch:/app
      - ./sahur-core:/app/sahur-core
    command: ["echo", "SAHUR Batch image built successfully"]

  # SAHUR Web (Frontend)
  sahur-web:
    build:
      context: ./sahur-web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000/ws
      NODE_ENV: development
    depends_on:
      - sahur-server
    volumes:
      - ./sahur-web:/app
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
